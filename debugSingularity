Bootstrap: docker
From: ubuntu:18.04

%post -c /bin/bash

    cd /

    # Prepare directories for installing applications
    mkdir -p APPS
    mkdir -p INSTALLERS

    # Update all libraries
    apt-get -y update

    # Install xvfb
    apt-get -y install xvfb

    # Install ghostscript for pdf management
    apt-get -y install ghostscript

    # Make custom folders
    mkdir -p INPUTS
    mkdir -p SUPPLEMENTAL
    mkdir -p OUTPUTS
    mkdir -p CODE

    # Set Permissions
    chmod 755 /INPUTS
    chmod 755 /SUPPLEMENTAL
    chmod 755 /APPS
    chmod 775 /OUTPUTS
    chmod 755 /CODE
    
    # Install source code
    cd /
    apt-get -y install wget git gcc libpq-dev python-dev python-pip python3 python3.8 python3.8-venv python3.8-dev python3-dev python3-pip python3-venv python3-wheel libpng-dev libfreetype6-dev libblas3 liblapack3 libblas-dev liblapack-dev pkg-config
    cd /INSTALLERS
    #git clone https://github.com/MASILab/PreQual.git
    git clone -b pk https://github.com/praitayini/PreQual.git
    cd PreQual
    git checkout v1.0.8
    mv src/APPS/* /APPS
    mv src/CODE/* /CODE
    mv src/SUPPLEMENTAL/* /SUPPLEMENTAL
    cd /APPS/gradtensor
    python3.8 -m venv gradvenv
    source gradvenv/bin/activate
    pip3 install wheel
    wget https://bootstrap.pypa.io/get-pip.py
    python3.8 get-pip.py
    pip3 install --upgrade setuptools
    pip install fpdf imageio pypng freetype-py numpy==1.21.* 
    git clone https://github.com/scilus/scilpy.git
    cd scilpy
    pip install -e .
    cd ..
    deactivate
    cd /

    # Clean up
    rm -r /INSTALLERS

%environment

    # MRTrix3
    # export PATH="/APPS/mrtrix3/bin:$PATH"

    # # FSL
    # FSLDIR=/APPS/fsl
    # . ${FSLDIR}/etc/fslconf/fsl.sh
    # PATH=${FSLDIR}/bin:${PATH}
    # export FSLDIR PATH

    # # Convert3D
    # export PATH="/APPS/c3d-1.0.0-Linux-x86_64/bin:$PATH"

    # # ANTs
    # export ANTSPATH=/APPS/ants/bin/
    # export PATH=${ANTSPATH}:$PATH

    # # FreeSurfer
    # export FREESURFER_HOME=/APPS/freesurfer
    # #source $FREESURFER_HOME/SetUpFreeSurfer.sh # For us, only synb0 needs it so will put in that script.

    # # CUDA
    # export CPATH="/usr/local/cuda/include:$CPATH"
    # export PATH="/usr/local/cuda/bin:$PATH"
    # export LD_LIBRARY_PATH="/usr/local/cuda/lib64:$LD_LIBRARY_PATH"
    # export CUDA_HOME="/usr/local/cuda"

    # Download the Matlab Compiled Runtime installer, install, clean up
    apt-get install -y wget unzip openjdk-8-jre libxt6
    mkdir /MCR
    wget -nv -P /MCR http://ssd.mathworks.com/supportfiles/downloads/R2017a/deployment_files/R2017a/installers/glnxa64/MCR_R2017a_glnxa64_installer.zip
    unzip -q /MCR/MCR_R2017a_glnxa64_installer.zip -d /MCR/MCR_R2017a_glnxa64_installer
    /MCR/MCR_R2017a_glnxa64_installer/install -mode silent -agreeToLicense yes
    rm -r /MCR/MCR_R2017a_glnxa64_installer /MCR/MCR_R2017a_glnxa64_installer.zip
    rmdir /MCR

%runscript

    # xvfb-run -a --server-num=$((65536+$$)) --server-args="-screen 0 1600x1280x24 -ac" bash /CODE/run_dtiQA.sh /INPUTS /OUTPUTS "$@"
    xvfb-run -a --server-num=$((65536+$$)) --server-args="-screen 0 1600x1280x24 -ac" bash /APPS/gradtensor/debug_gradtensor.sh /INPUTS /OUTPUTS "$@"
